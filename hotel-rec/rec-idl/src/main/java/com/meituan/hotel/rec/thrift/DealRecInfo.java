/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.meituan.hotel.rec.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DealRecInfo implements org.apache.thrift.TBase<DealRecInfo, DealRecInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DealRecInfo");

  private static final org.apache.thrift.protocol.TField DEAL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("dealId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CT_POI_FIELD_DESC = new org.apache.thrift.protocol.TField("ct_poi", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ST_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("st_id", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField EXTRA_DATA_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("extraDataMap", org.apache.thrift.protocol.TType.MAP, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new DealRecInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new DealRecInfoTupleSchemeFactory());
  }

  public int dealId; // required
  public String ct_poi; // optional
  public String st_id; // optional
  public Map<String,String> extraDataMap; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DEAL_ID((short)1, "dealId"),
    CT_POI((short)2, "ct_poi"),
    ST_ID((short)3, "st_id"),
    EXTRA_DATA_MAP((short)4, "extraDataMap");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DEAL_ID
          return DEAL_ID;
        case 2: // CT_POI
          return CT_POI;
        case 3: // ST_ID
          return ST_ID;
        case 4: // EXTRA_DATA_MAP
          return EXTRA_DATA_MAP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DEALID_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);
  private _Fields optionals[] = {_Fields.CT_POI,_Fields.ST_ID,_Fields.EXTRA_DATA_MAP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DEAL_ID, new org.apache.thrift.meta_data.FieldMetaData("dealId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CT_POI, new org.apache.thrift.meta_data.FieldMetaData("ct_poi", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ST_ID, new org.apache.thrift.meta_data.FieldMetaData("st_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_DATA_MAP, new org.apache.thrift.meta_data.FieldMetaData("extraDataMap", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DealRecInfo.class, metaDataMap);
  }

  public DealRecInfo() {
    this.ct_poi = "";

    this.st_id = "";

  }

  public DealRecInfo(
    int dealId)
  {
    this();
    this.dealId = dealId;
    setDealIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DealRecInfo(DealRecInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.dealId = other.dealId;
    if (other.isSetCt_poi()) {
      this.ct_poi = other.ct_poi;
    }
    if (other.isSetSt_id()) {
      this.st_id = other.st_id;
    }
    if (other.isSetExtraDataMap()) {
      Map<String,String> __this__extraDataMap = new HashMap<String,String>();
      for (Map.Entry<String, String> other_element : other.extraDataMap.entrySet()) {

        String other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        String __this__extraDataMap_copy_key = other_element_key;

        String __this__extraDataMap_copy_value = other_element_value;

        __this__extraDataMap.put(__this__extraDataMap_copy_key, __this__extraDataMap_copy_value);
      }
      this.extraDataMap = __this__extraDataMap;
    }
  }

  public DealRecInfo deepCopy() {
    return new DealRecInfo(this);
  }

  @Override
  public void clear() {
    setDealIdIsSet(false);
    this.dealId = 0;
    this.ct_poi = "";

    this.st_id = "";

    this.extraDataMap = null;
  }

  public int getDealId() {
    return this.dealId;
  }

  public DealRecInfo setDealId(int dealId) {
    this.dealId = dealId;
    setDealIdIsSet(true);
    return this;
  }

  public void unsetDealId() {
    __isset_bit_vector.clear(__DEALID_ISSET_ID);
  }

  /** Returns true if field dealId is set (has been assigned a value) and false otherwise */
  public boolean isSetDealId() {
    return __isset_bit_vector.get(__DEALID_ISSET_ID);
  }

  public void setDealIdIsSet(boolean value) {
    __isset_bit_vector.set(__DEALID_ISSET_ID, value);
  }

  public String getCt_poi() {
    return this.ct_poi;
  }

  public DealRecInfo setCt_poi(String ct_poi) {
    this.ct_poi = ct_poi;
    return this;
  }

  public void unsetCt_poi() {
    this.ct_poi = null;
  }

  /** Returns true if field ct_poi is set (has been assigned a value) and false otherwise */
  public boolean isSetCt_poi() {
    return this.ct_poi != null;
  }

  public void setCt_poiIsSet(boolean value) {
    if (!value) {
      this.ct_poi = null;
    }
  }

  public String getSt_id() {
    return this.st_id;
  }

  public DealRecInfo setSt_id(String st_id) {
    this.st_id = st_id;
    return this;
  }

  public void unsetSt_id() {
    this.st_id = null;
  }

  /** Returns true if field st_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSt_id() {
    return this.st_id != null;
  }

  public void setSt_idIsSet(boolean value) {
    if (!value) {
      this.st_id = null;
    }
  }

  public int getExtraDataMapSize() {
    return (this.extraDataMap == null) ? 0 : this.extraDataMap.size();
  }

  public void putToExtraDataMap(String key, String val) {
    if (this.extraDataMap == null) {
      this.extraDataMap = new HashMap<String,String>();
    }
    this.extraDataMap.put(key, val);
  }

  public Map<String,String> getExtraDataMap() {
    return this.extraDataMap;
  }

  public DealRecInfo setExtraDataMap(Map<String,String> extraDataMap) {
    this.extraDataMap = extraDataMap;
    return this;
  }

  public void unsetExtraDataMap() {
    this.extraDataMap = null;
  }

  /** Returns true if field extraDataMap is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraDataMap() {
    return this.extraDataMap != null;
  }

  public void setExtraDataMapIsSet(boolean value) {
    if (!value) {
      this.extraDataMap = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DEAL_ID:
      if (value == null) {
        unsetDealId();
      } else {
        setDealId((Integer)value);
      }
      break;

    case CT_POI:
      if (value == null) {
        unsetCt_poi();
      } else {
        setCt_poi((String)value);
      }
      break;

    case ST_ID:
      if (value == null) {
        unsetSt_id();
      } else {
        setSt_id((String)value);
      }
      break;

    case EXTRA_DATA_MAP:
      if (value == null) {
        unsetExtraDataMap();
      } else {
        setExtraDataMap((Map<String,String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DEAL_ID:
      return Integer.valueOf(getDealId());

    case CT_POI:
      return getCt_poi();

    case ST_ID:
      return getSt_id();

    case EXTRA_DATA_MAP:
      return getExtraDataMap();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DEAL_ID:
      return isSetDealId();
    case CT_POI:
      return isSetCt_poi();
    case ST_ID:
      return isSetSt_id();
    case EXTRA_DATA_MAP:
      return isSetExtraDataMap();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof DealRecInfo)
      return this.equals((DealRecInfo)that);
    return false;
  }

  public boolean equals(DealRecInfo that) {
    if (that == null)
      return false;

    boolean this_present_dealId = true;
    boolean that_present_dealId = true;
    if (this_present_dealId || that_present_dealId) {
      if (!(this_present_dealId && that_present_dealId))
        return false;
      if (this.dealId != that.dealId)
        return false;
    }

    boolean this_present_ct_poi = true && this.isSetCt_poi();
    boolean that_present_ct_poi = true && that.isSetCt_poi();
    if (this_present_ct_poi || that_present_ct_poi) {
      if (!(this_present_ct_poi && that_present_ct_poi))
        return false;
      if (!this.ct_poi.equals(that.ct_poi))
        return false;
    }

    boolean this_present_st_id = true && this.isSetSt_id();
    boolean that_present_st_id = true && that.isSetSt_id();
    if (this_present_st_id || that_present_st_id) {
      if (!(this_present_st_id && that_present_st_id))
        return false;
      if (!this.st_id.equals(that.st_id))
        return false;
    }

    boolean this_present_extraDataMap = true && this.isSetExtraDataMap();
    boolean that_present_extraDataMap = true && that.isSetExtraDataMap();
    if (this_present_extraDataMap || that_present_extraDataMap) {
      if (!(this_present_extraDataMap && that_present_extraDataMap))
        return false;
      if (!this.extraDataMap.equals(that.extraDataMap))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(DealRecInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    DealRecInfo typedOther = (DealRecInfo)other;

    lastComparison = Boolean.valueOf(isSetDealId()).compareTo(typedOther.isSetDealId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDealId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dealId, typedOther.dealId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCt_poi()).compareTo(typedOther.isSetCt_poi());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCt_poi()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ct_poi, typedOther.ct_poi);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSt_id()).compareTo(typedOther.isSetSt_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSt_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.st_id, typedOther.st_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraDataMap()).compareTo(typedOther.isSetExtraDataMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraDataMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraDataMap, typedOther.extraDataMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("DealRecInfo(");
    boolean first = true;

    sb.append("dealId:");
    sb.append(this.dealId);
    first = false;
    if (isSetCt_poi()) {
      if (!first) sb.append(", ");
      sb.append("ct_poi:");
      if (this.ct_poi == null) {
        sb.append("null");
      } else {
        sb.append(this.ct_poi);
      }
      first = false;
    }
    if (isSetSt_id()) {
      if (!first) sb.append(", ");
      sb.append("st_id:");
      if (this.st_id == null) {
        sb.append("null");
      } else {
        sb.append(this.st_id);
      }
      first = false;
    }
    if (isSetExtraDataMap()) {
      if (!first) sb.append(", ");
      sb.append("extraDataMap:");
      if (this.extraDataMap == null) {
        sb.append("null");
      } else {
        sb.append(this.extraDataMap);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'dealId' because it's a primitive and you chose the non-beans generator.
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DealRecInfoStandardSchemeFactory implements SchemeFactory {
    public DealRecInfoStandardScheme getScheme() {
      return new DealRecInfoStandardScheme();
    }
  }

  private static class DealRecInfoStandardScheme extends StandardScheme<DealRecInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, DealRecInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DEAL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dealId = iprot.readI32();
              struct.setDealIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CT_POI
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ct_poi = iprot.readString();
              struct.setCt_poiIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ST_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.st_id = iprot.readString();
              struct.setSt_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EXTRA_DATA_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.extraDataMap = new HashMap<String,String>(2*_map0.size);
                for (int _i1 = 0; _i1 < _map0.size; ++_i1)
                {
                  String _key2; // required
                  String _val3; // required
                  _key2 = iprot.readString();
                  _val3 = iprot.readString();
                  struct.extraDataMap.put(_key2, _val3);
                }
                iprot.readMapEnd();
              }
              struct.setExtraDataMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetDealId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'dealId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, DealRecInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(DEAL_ID_FIELD_DESC);
      oprot.writeI32(struct.dealId);
      oprot.writeFieldEnd();
      if (struct.ct_poi != null) {
        if (struct.isSetCt_poi()) {
          oprot.writeFieldBegin(CT_POI_FIELD_DESC);
          oprot.writeString(struct.ct_poi);
          oprot.writeFieldEnd();
        }
      }
      if (struct.st_id != null) {
        if (struct.isSetSt_id()) {
          oprot.writeFieldBegin(ST_ID_FIELD_DESC);
          oprot.writeString(struct.st_id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraDataMap != null) {
        if (struct.isSetExtraDataMap()) {
          oprot.writeFieldBegin(EXTRA_DATA_MAP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.extraDataMap.size()));
            for (Map.Entry<String, String> _iter4 : struct.extraDataMap.entrySet())
            {
              oprot.writeString(_iter4.getKey());
              oprot.writeString(_iter4.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DealRecInfoTupleSchemeFactory implements SchemeFactory {
    public DealRecInfoTupleScheme getScheme() {
      return new DealRecInfoTupleScheme();
    }
  }

  private static class DealRecInfoTupleScheme extends TupleScheme<DealRecInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, DealRecInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.dealId);
      BitSet optionals = new BitSet();
      if (struct.isSetCt_poi()) {
        optionals.set(0);
      }
      if (struct.isSetSt_id()) {
        optionals.set(1);
      }
      if (struct.isSetExtraDataMap()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetCt_poi()) {
        oprot.writeString(struct.ct_poi);
      }
      if (struct.isSetSt_id()) {
        oprot.writeString(struct.st_id);
      }
      if (struct.isSetExtraDataMap()) {
        {
          oprot.writeI32(struct.extraDataMap.size());
          for (Map.Entry<String, String> _iter5 : struct.extraDataMap.entrySet())
          {
            oprot.writeString(_iter5.getKey());
            oprot.writeString(_iter5.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, DealRecInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.dealId = iprot.readI32();
      struct.setDealIdIsSet(true);
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.ct_poi = iprot.readString();
        struct.setCt_poiIsSet(true);
      }
      if (incoming.get(1)) {
        struct.st_id = iprot.readString();
        struct.setSt_idIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map6 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.extraDataMap = new HashMap<String,String>(2*_map6.size);
          for (int _i7 = 0; _i7 < _map6.size; ++_i7)
          {
            String _key8; // required
            String _val9; // required
            _key8 = iprot.readString();
            _val9 = iprot.readString();
            struct.extraDataMap.put(_key8, _val9);
          }
        }
        struct.setExtraDataMapIsSet(true);
      }
    }
  }

}

