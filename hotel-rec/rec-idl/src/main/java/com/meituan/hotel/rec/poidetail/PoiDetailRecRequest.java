/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.meituan.hotel.rec.poidetail;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PoiDetailRecRequest implements org.apache.thrift.TBase<PoiDetailRecRequest, PoiDetailRecRequest._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PoiDetailRecRequest");

  private static final org.apache.thrift.protocol.TField DETAIL_POI_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("detailPoiInfo", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField DETAIL_USER_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("detailUserInfo", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField REQUEST_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("requestType", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField STRATEGY_FIELD_DESC = new org.apache.thrift.protocol.TField("strategy", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EXTRA_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("extraMap", org.apache.thrift.protocol.TType.MAP, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PoiDetailRecRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PoiDetailRecRequestTupleSchemeFactory());
  }

  public DetailPoiInfo detailPoiInfo; // required
  public DetailUserInfo detailUserInfo; // required
  /**
   * 
   * @see RecRequestType
   */
  public RecRequestType requestType; // required
  public String strategy; // optional
  public Map<String,String> extraMap; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DETAIL_POI_INFO((short)1, "detailPoiInfo"),
    DETAIL_USER_INFO((short)2, "detailUserInfo"),
    /**
     * 
     * @see RecRequestType
     */
    REQUEST_TYPE((short)3, "requestType"),
    STRATEGY((short)4, "strategy"),
    EXTRA_MAP((short)5, "extraMap");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DETAIL_POI_INFO
          return DETAIL_POI_INFO;
        case 2: // DETAIL_USER_INFO
          return DETAIL_USER_INFO;
        case 3: // REQUEST_TYPE
          return REQUEST_TYPE;
        case 4: // STRATEGY
          return STRATEGY;
        case 5: // EXTRA_MAP
          return EXTRA_MAP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.STRATEGY,_Fields.EXTRA_MAP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DETAIL_POI_INFO, new org.apache.thrift.meta_data.FieldMetaData("detailPoiInfo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailPoiInfo.class)));
    tmpMap.put(_Fields.DETAIL_USER_INFO, new org.apache.thrift.meta_data.FieldMetaData("detailUserInfo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DetailUserInfo.class)));
    tmpMap.put(_Fields.REQUEST_TYPE, new org.apache.thrift.meta_data.FieldMetaData("requestType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, RecRequestType.class)));
    tmpMap.put(_Fields.STRATEGY, new org.apache.thrift.meta_data.FieldMetaData("strategy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_MAP, new org.apache.thrift.meta_data.FieldMetaData("extraMap", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PoiDetailRecRequest.class, metaDataMap);
  }

  public PoiDetailRecRequest() {
  }

  public PoiDetailRecRequest(
    DetailPoiInfo detailPoiInfo,
    DetailUserInfo detailUserInfo,
    RecRequestType requestType)
  {
    this();
    this.detailPoiInfo = detailPoiInfo;
    this.detailUserInfo = detailUserInfo;
    this.requestType = requestType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PoiDetailRecRequest(PoiDetailRecRequest other) {
    if (other.isSetDetailPoiInfo()) {
      this.detailPoiInfo = new DetailPoiInfo(other.detailPoiInfo);
    }
    if (other.isSetDetailUserInfo()) {
      this.detailUserInfo = new DetailUserInfo(other.detailUserInfo);
    }
    if (other.isSetRequestType()) {
      this.requestType = other.requestType;
    }
    if (other.isSetStrategy()) {
      this.strategy = other.strategy;
    }
    if (other.isSetExtraMap()) {
      Map<String,String> __this__extraMap = new HashMap<String,String>();
      for (Map.Entry<String, String> other_element : other.extraMap.entrySet()) {

        String other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        String __this__extraMap_copy_key = other_element_key;

        String __this__extraMap_copy_value = other_element_value;

        __this__extraMap.put(__this__extraMap_copy_key, __this__extraMap_copy_value);
      }
      this.extraMap = __this__extraMap;
    }
  }

  public PoiDetailRecRequest deepCopy() {
    return new PoiDetailRecRequest(this);
  }

  @Override
  public void clear() {
    this.detailPoiInfo = null;
    this.detailUserInfo = null;
    this.requestType = null;
    this.strategy = null;
    this.extraMap = null;
  }

  public DetailPoiInfo getDetailPoiInfo() {
    return this.detailPoiInfo;
  }

  public PoiDetailRecRequest setDetailPoiInfo(DetailPoiInfo detailPoiInfo) {
    this.detailPoiInfo = detailPoiInfo;
    return this;
  }

  public void unsetDetailPoiInfo() {
    this.detailPoiInfo = null;
  }

  /** Returns true if field detailPoiInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetDetailPoiInfo() {
    return this.detailPoiInfo != null;
  }

  public void setDetailPoiInfoIsSet(boolean value) {
    if (!value) {
      this.detailPoiInfo = null;
    }
  }

  public DetailUserInfo getDetailUserInfo() {
    return this.detailUserInfo;
  }

  public PoiDetailRecRequest setDetailUserInfo(DetailUserInfo detailUserInfo) {
    this.detailUserInfo = detailUserInfo;
    return this;
  }

  public void unsetDetailUserInfo() {
    this.detailUserInfo = null;
  }

  /** Returns true if field detailUserInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetDetailUserInfo() {
    return this.detailUserInfo != null;
  }

  public void setDetailUserInfoIsSet(boolean value) {
    if (!value) {
      this.detailUserInfo = null;
    }
  }

  /**
   * 
   * @see RecRequestType
   */
  public RecRequestType getRequestType() {
    return this.requestType;
  }

  /**
   * 
   * @see RecRequestType
   */
  public PoiDetailRecRequest setRequestType(RecRequestType requestType) {
    this.requestType = requestType;
    return this;
  }

  public void unsetRequestType() {
    this.requestType = null;
  }

  /** Returns true if field requestType is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestType() {
    return this.requestType != null;
  }

  public void setRequestTypeIsSet(boolean value) {
    if (!value) {
      this.requestType = null;
    }
  }

  public String getStrategy() {
    return this.strategy;
  }

  public PoiDetailRecRequest setStrategy(String strategy) {
    this.strategy = strategy;
    return this;
  }

  public void unsetStrategy() {
    this.strategy = null;
  }

  /** Returns true if field strategy is set (has been assigned a value) and false otherwise */
  public boolean isSetStrategy() {
    return this.strategy != null;
  }

  public void setStrategyIsSet(boolean value) {
    if (!value) {
      this.strategy = null;
    }
  }

  public int getExtraMapSize() {
    return (this.extraMap == null) ? 0 : this.extraMap.size();
  }

  public void putToExtraMap(String key, String val) {
    if (this.extraMap == null) {
      this.extraMap = new HashMap<String,String>();
    }
    this.extraMap.put(key, val);
  }

  public Map<String,String> getExtraMap() {
    return this.extraMap;
  }

  public PoiDetailRecRequest setExtraMap(Map<String,String> extraMap) {
    this.extraMap = extraMap;
    return this;
  }

  public void unsetExtraMap() {
    this.extraMap = null;
  }

  /** Returns true if field extraMap is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraMap() {
    return this.extraMap != null;
  }

  public void setExtraMapIsSet(boolean value) {
    if (!value) {
      this.extraMap = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DETAIL_POI_INFO:
      if (value == null) {
        unsetDetailPoiInfo();
      } else {
        setDetailPoiInfo((DetailPoiInfo)value);
      }
      break;

    case DETAIL_USER_INFO:
      if (value == null) {
        unsetDetailUserInfo();
      } else {
        setDetailUserInfo((DetailUserInfo)value);
      }
      break;

    case REQUEST_TYPE:
      if (value == null) {
        unsetRequestType();
      } else {
        setRequestType((RecRequestType)value);
      }
      break;

    case STRATEGY:
      if (value == null) {
        unsetStrategy();
      } else {
        setStrategy((String)value);
      }
      break;

    case EXTRA_MAP:
      if (value == null) {
        unsetExtraMap();
      } else {
        setExtraMap((Map<String,String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DETAIL_POI_INFO:
      return getDetailPoiInfo();

    case DETAIL_USER_INFO:
      return getDetailUserInfo();

    case REQUEST_TYPE:
      return getRequestType();

    case STRATEGY:
      return getStrategy();

    case EXTRA_MAP:
      return getExtraMap();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DETAIL_POI_INFO:
      return isSetDetailPoiInfo();
    case DETAIL_USER_INFO:
      return isSetDetailUserInfo();
    case REQUEST_TYPE:
      return isSetRequestType();
    case STRATEGY:
      return isSetStrategy();
    case EXTRA_MAP:
      return isSetExtraMap();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PoiDetailRecRequest)
      return this.equals((PoiDetailRecRequest)that);
    return false;
  }

  public boolean equals(PoiDetailRecRequest that) {
    if (that == null)
      return false;

    boolean this_present_detailPoiInfo = true && this.isSetDetailPoiInfo();
    boolean that_present_detailPoiInfo = true && that.isSetDetailPoiInfo();
    if (this_present_detailPoiInfo || that_present_detailPoiInfo) {
      if (!(this_present_detailPoiInfo && that_present_detailPoiInfo))
        return false;
      if (!this.detailPoiInfo.equals(that.detailPoiInfo))
        return false;
    }

    boolean this_present_detailUserInfo = true && this.isSetDetailUserInfo();
    boolean that_present_detailUserInfo = true && that.isSetDetailUserInfo();
    if (this_present_detailUserInfo || that_present_detailUserInfo) {
      if (!(this_present_detailUserInfo && that_present_detailUserInfo))
        return false;
      if (!this.detailUserInfo.equals(that.detailUserInfo))
        return false;
    }

    boolean this_present_requestType = true && this.isSetRequestType();
    boolean that_present_requestType = true && that.isSetRequestType();
    if (this_present_requestType || that_present_requestType) {
      if (!(this_present_requestType && that_present_requestType))
        return false;
      if (!this.requestType.equals(that.requestType))
        return false;
    }

    boolean this_present_strategy = true && this.isSetStrategy();
    boolean that_present_strategy = true && that.isSetStrategy();
    if (this_present_strategy || that_present_strategy) {
      if (!(this_present_strategy && that_present_strategy))
        return false;
      if (!this.strategy.equals(that.strategy))
        return false;
    }

    boolean this_present_extraMap = true && this.isSetExtraMap();
    boolean that_present_extraMap = true && that.isSetExtraMap();
    if (this_present_extraMap || that_present_extraMap) {
      if (!(this_present_extraMap && that_present_extraMap))
        return false;
      if (!this.extraMap.equals(that.extraMap))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(PoiDetailRecRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    PoiDetailRecRequest typedOther = (PoiDetailRecRequest)other;

    lastComparison = Boolean.valueOf(isSetDetailPoiInfo()).compareTo(typedOther.isSetDetailPoiInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetailPoiInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detailPoiInfo, typedOther.detailPoiInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDetailUserInfo()).compareTo(typedOther.isSetDetailUserInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetailUserInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detailUserInfo, typedOther.detailUserInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestType()).compareTo(typedOther.isSetRequestType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestType, typedOther.requestType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStrategy()).compareTo(typedOther.isSetStrategy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStrategy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.strategy, typedOther.strategy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraMap()).compareTo(typedOther.isSetExtraMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraMap, typedOther.extraMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PoiDetailRecRequest(");
    boolean first = true;

    sb.append("detailPoiInfo:");
    if (this.detailPoiInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.detailPoiInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("detailUserInfo:");
    if (this.detailUserInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.detailUserInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestType:");
    if (this.requestType == null) {
      sb.append("null");
    } else {
      sb.append(this.requestType);
    }
    first = false;
    if (isSetStrategy()) {
      if (!first) sb.append(", ");
      sb.append("strategy:");
      if (this.strategy == null) {
        sb.append("null");
      } else {
        sb.append(this.strategy);
      }
      first = false;
    }
    if (isSetExtraMap()) {
      if (!first) sb.append(", ");
      sb.append("extraMap:");
      if (this.extraMap == null) {
        sb.append("null");
      } else {
        sb.append(this.extraMap);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (detailPoiInfo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'detailPoiInfo' was not present! Struct: " + toString());
    }
    if (detailUserInfo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'detailUserInfo' was not present! Struct: " + toString());
    }
    if (requestType == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'requestType' was not present! Struct: " + toString());
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PoiDetailRecRequestStandardSchemeFactory implements SchemeFactory {
    public PoiDetailRecRequestStandardScheme getScheme() {
      return new PoiDetailRecRequestStandardScheme();
    }
  }

  private static class PoiDetailRecRequestStandardScheme extends StandardScheme<PoiDetailRecRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PoiDetailRecRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DETAIL_POI_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.detailPoiInfo = new DetailPoiInfo();
              struct.detailPoiInfo.read(iprot);
              struct.setDetailPoiInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DETAIL_USER_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.detailUserInfo = new DetailUserInfo();
              struct.detailUserInfo.read(iprot);
              struct.setDetailUserInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REQUEST_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.requestType = RecRequestType.findByValue(iprot.readI32());
              struct.setRequestTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STRATEGY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.strategy = iprot.readString();
              struct.setStrategyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXTRA_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map46 = iprot.readMapBegin();
                struct.extraMap = new HashMap<String,String>(2*_map46.size);
                for (int _i47 = 0; _i47 < _map46.size; ++_i47)
                {
                  String _key48; // required
                  String _val49; // required
                  _key48 = iprot.readString();
                  _val49 = iprot.readString();
                  struct.extraMap.put(_key48, _val49);
                }
                iprot.readMapEnd();
              }
              struct.setExtraMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PoiDetailRecRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.detailPoiInfo != null) {
        oprot.writeFieldBegin(DETAIL_POI_INFO_FIELD_DESC);
        struct.detailPoiInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.detailUserInfo != null) {
        oprot.writeFieldBegin(DETAIL_USER_INFO_FIELD_DESC);
        struct.detailUserInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.requestType != null) {
        oprot.writeFieldBegin(REQUEST_TYPE_FIELD_DESC);
        oprot.writeI32(struct.requestType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.strategy != null) {
        if (struct.isSetStrategy()) {
          oprot.writeFieldBegin(STRATEGY_FIELD_DESC);
          oprot.writeString(struct.strategy);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraMap != null) {
        if (struct.isSetExtraMap()) {
          oprot.writeFieldBegin(EXTRA_MAP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.extraMap.size()));
            for (Map.Entry<String, String> _iter50 : struct.extraMap.entrySet())
            {
              oprot.writeString(_iter50.getKey());
              oprot.writeString(_iter50.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PoiDetailRecRequestTupleSchemeFactory implements SchemeFactory {
    public PoiDetailRecRequestTupleScheme getScheme() {
      return new PoiDetailRecRequestTupleScheme();
    }
  }

  private static class PoiDetailRecRequestTupleScheme extends TupleScheme<PoiDetailRecRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PoiDetailRecRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.detailPoiInfo.write(oprot);
      struct.detailUserInfo.write(oprot);
      oprot.writeI32(struct.requestType.getValue());
      BitSet optionals = new BitSet();
      if (struct.isSetStrategy()) {
        optionals.set(0);
      }
      if (struct.isSetExtraMap()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetStrategy()) {
        oprot.writeString(struct.strategy);
      }
      if (struct.isSetExtraMap()) {
        {
          oprot.writeI32(struct.extraMap.size());
          for (Map.Entry<String, String> _iter51 : struct.extraMap.entrySet())
          {
            oprot.writeString(_iter51.getKey());
            oprot.writeString(_iter51.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PoiDetailRecRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.detailPoiInfo = new DetailPoiInfo();
      struct.detailPoiInfo.read(iprot);
      struct.setDetailPoiInfoIsSet(true);
      struct.detailUserInfo = new DetailUserInfo();
      struct.detailUserInfo.read(iprot);
      struct.setDetailUserInfoIsSet(true);
      struct.requestType = RecRequestType.findByValue(iprot.readI32());
      struct.setRequestTypeIsSet(true);
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.strategy = iprot.readString();
        struct.setStrategyIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map52 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.extraMap = new HashMap<String,String>(2*_map52.size);
          for (int _i53 = 0; _i53 < _map52.size; ++_i53)
          {
            String _key54; // required
            String _val55; // required
            _key54 = iprot.readString();
            _val55 = iprot.readString();
            struct.extraMap.put(_key54, _val55);
          }
        }
        struct.setExtraMapIsSet(true);
      }
    }
  }

}

