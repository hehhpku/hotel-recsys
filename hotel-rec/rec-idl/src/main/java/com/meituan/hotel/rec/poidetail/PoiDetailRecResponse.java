/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.meituan.hotel.rec.poidetail;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PoiDetailRecResponse implements org.apache.thrift.TBase<PoiDetailRecResponse, PoiDetailRecResponse._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PoiDetailRecResponse");

  private static final org.apache.thrift.protocol.TField POI_REC_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("poiRecList", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField SESSION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sessionId", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField STRATEGY_FIELD_DESC = new org.apache.thrift.protocol.TField("strategy", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EXTRA_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("extraMap", org.apache.thrift.protocol.TType.MAP, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PoiDetailRecResponseStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PoiDetailRecResponseTupleSchemeFactory());
  }

  public List<PoiDetailResp> poiRecList; // required
  /**
   * 
   * @see RecResponseStatus
   */
  public RecResponseStatus status; // required
  public long sessionId; // optional
  public String strategy; // optional
  public Map<String,String> extraMap; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    POI_REC_LIST((short)1, "poiRecList"),
    /**
     * 
     * @see RecResponseStatus
     */
    STATUS((short)2, "status"),
    SESSION_ID((short)3, "sessionId"),
    STRATEGY((short)4, "strategy"),
    EXTRA_MAP((short)5, "extraMap");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // POI_REC_LIST
          return POI_REC_LIST;
        case 2: // STATUS
          return STATUS;
        case 3: // SESSION_ID
          return SESSION_ID;
        case 4: // STRATEGY
          return STRATEGY;
        case 5: // EXTRA_MAP
          return EXTRA_MAP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SESSIONID_ISSET_ID = 0;
  private BitSet __isset_bit_vector = new BitSet(1);
  private _Fields optionals[] = {_Fields.SESSION_ID,_Fields.STRATEGY,_Fields.EXTRA_MAP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.POI_REC_LIST, new org.apache.thrift.meta_data.FieldMetaData("poiRecList", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PoiDetailResp.class))));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, RecResponseStatus.class)));
    tmpMap.put(_Fields.SESSION_ID, new org.apache.thrift.meta_data.FieldMetaData("sessionId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STRATEGY, new org.apache.thrift.meta_data.FieldMetaData("strategy", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_MAP, new org.apache.thrift.meta_data.FieldMetaData("extraMap", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PoiDetailRecResponse.class, metaDataMap);
  }

  public PoiDetailRecResponse() {
  }

  public PoiDetailRecResponse(
    List<PoiDetailResp> poiRecList,
    RecResponseStatus status)
  {
    this();
    this.poiRecList = poiRecList;
    this.status = status;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PoiDetailRecResponse(PoiDetailRecResponse other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetPoiRecList()) {
      List<PoiDetailResp> __this__poiRecList = new ArrayList<PoiDetailResp>();
      for (PoiDetailResp other_element : other.poiRecList) {
        __this__poiRecList.add(new PoiDetailResp(other_element));
      }
      this.poiRecList = __this__poiRecList;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    this.sessionId = other.sessionId;
    if (other.isSetStrategy()) {
      this.strategy = other.strategy;
    }
    if (other.isSetExtraMap()) {
      Map<String,String> __this__extraMap = new HashMap<String,String>();
      for (Map.Entry<String, String> other_element : other.extraMap.entrySet()) {

        String other_element_key = other_element.getKey();
        String other_element_value = other_element.getValue();

        String __this__extraMap_copy_key = other_element_key;

        String __this__extraMap_copy_value = other_element_value;

        __this__extraMap.put(__this__extraMap_copy_key, __this__extraMap_copy_value);
      }
      this.extraMap = __this__extraMap;
    }
  }

  public PoiDetailRecResponse deepCopy() {
    return new PoiDetailRecResponse(this);
  }

  @Override
  public void clear() {
    this.poiRecList = null;
    this.status = null;
    setSessionIdIsSet(false);
    this.sessionId = 0;
    this.strategy = null;
    this.extraMap = null;
  }

  public int getPoiRecListSize() {
    return (this.poiRecList == null) ? 0 : this.poiRecList.size();
  }

  public java.util.Iterator<PoiDetailResp> getPoiRecListIterator() {
    return (this.poiRecList == null) ? null : this.poiRecList.iterator();
  }

  public void addToPoiRecList(PoiDetailResp elem) {
    if (this.poiRecList == null) {
      this.poiRecList = new ArrayList<PoiDetailResp>();
    }
    this.poiRecList.add(elem);
  }

  public List<PoiDetailResp> getPoiRecList() {
    return this.poiRecList;
  }

  public PoiDetailRecResponse setPoiRecList(List<PoiDetailResp> poiRecList) {
    this.poiRecList = poiRecList;
    return this;
  }

  public void unsetPoiRecList() {
    this.poiRecList = null;
  }

  /** Returns true if field poiRecList is set (has been assigned a value) and false otherwise */
  public boolean isSetPoiRecList() {
    return this.poiRecList != null;
  }

  public void setPoiRecListIsSet(boolean value) {
    if (!value) {
      this.poiRecList = null;
    }
  }

  /**
   * 
   * @see RecResponseStatus
   */
  public RecResponseStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see RecResponseStatus
   */
  public PoiDetailRecResponse setStatus(RecResponseStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public long getSessionId() {
    return this.sessionId;
  }

  public PoiDetailRecResponse setSessionId(long sessionId) {
    this.sessionId = sessionId;
    setSessionIdIsSet(true);
    return this;
  }

  public void unsetSessionId() {
    __isset_bit_vector.clear(__SESSIONID_ISSET_ID);
  }

  /** Returns true if field sessionId is set (has been assigned a value) and false otherwise */
  public boolean isSetSessionId() {
    return __isset_bit_vector.get(__SESSIONID_ISSET_ID);
  }

  public void setSessionIdIsSet(boolean value) {
    __isset_bit_vector.set(__SESSIONID_ISSET_ID, value);
  }

  public String getStrategy() {
    return this.strategy;
  }

  public PoiDetailRecResponse setStrategy(String strategy) {
    this.strategy = strategy;
    return this;
  }

  public void unsetStrategy() {
    this.strategy = null;
  }

  /** Returns true if field strategy is set (has been assigned a value) and false otherwise */
  public boolean isSetStrategy() {
    return this.strategy != null;
  }

  public void setStrategyIsSet(boolean value) {
    if (!value) {
      this.strategy = null;
    }
  }

  public int getExtraMapSize() {
    return (this.extraMap == null) ? 0 : this.extraMap.size();
  }

  public void putToExtraMap(String key, String val) {
    if (this.extraMap == null) {
      this.extraMap = new HashMap<String,String>();
    }
    this.extraMap.put(key, val);
  }

  public Map<String,String> getExtraMap() {
    return this.extraMap;
  }

  public PoiDetailRecResponse setExtraMap(Map<String,String> extraMap) {
    this.extraMap = extraMap;
    return this;
  }

  public void unsetExtraMap() {
    this.extraMap = null;
  }

  /** Returns true if field extraMap is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraMap() {
    return this.extraMap != null;
  }

  public void setExtraMapIsSet(boolean value) {
    if (!value) {
      this.extraMap = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case POI_REC_LIST:
      if (value == null) {
        unsetPoiRecList();
      } else {
        setPoiRecList((List<PoiDetailResp>)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((RecResponseStatus)value);
      }
      break;

    case SESSION_ID:
      if (value == null) {
        unsetSessionId();
      } else {
        setSessionId((Long)value);
      }
      break;

    case STRATEGY:
      if (value == null) {
        unsetStrategy();
      } else {
        setStrategy((String)value);
      }
      break;

    case EXTRA_MAP:
      if (value == null) {
        unsetExtraMap();
      } else {
        setExtraMap((Map<String,String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case POI_REC_LIST:
      return getPoiRecList();

    case STATUS:
      return getStatus();

    case SESSION_ID:
      return Long.valueOf(getSessionId());

    case STRATEGY:
      return getStrategy();

    case EXTRA_MAP:
      return getExtraMap();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case POI_REC_LIST:
      return isSetPoiRecList();
    case STATUS:
      return isSetStatus();
    case SESSION_ID:
      return isSetSessionId();
    case STRATEGY:
      return isSetStrategy();
    case EXTRA_MAP:
      return isSetExtraMap();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PoiDetailRecResponse)
      return this.equals((PoiDetailRecResponse)that);
    return false;
  }

  public boolean equals(PoiDetailRecResponse that) {
    if (that == null)
      return false;

    boolean this_present_poiRecList = true && this.isSetPoiRecList();
    boolean that_present_poiRecList = true && that.isSetPoiRecList();
    if (this_present_poiRecList || that_present_poiRecList) {
      if (!(this_present_poiRecList && that_present_poiRecList))
        return false;
      if (!this.poiRecList.equals(that.poiRecList))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_sessionId = true && this.isSetSessionId();
    boolean that_present_sessionId = true && that.isSetSessionId();
    if (this_present_sessionId || that_present_sessionId) {
      if (!(this_present_sessionId && that_present_sessionId))
        return false;
      if (this.sessionId != that.sessionId)
        return false;
    }

    boolean this_present_strategy = true && this.isSetStrategy();
    boolean that_present_strategy = true && that.isSetStrategy();
    if (this_present_strategy || that_present_strategy) {
      if (!(this_present_strategy && that_present_strategy))
        return false;
      if (!this.strategy.equals(that.strategy))
        return false;
    }

    boolean this_present_extraMap = true && this.isSetExtraMap();
    boolean that_present_extraMap = true && that.isSetExtraMap();
    if (this_present_extraMap || that_present_extraMap) {
      if (!(this_present_extraMap && that_present_extraMap))
        return false;
      if (!this.extraMap.equals(that.extraMap))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(PoiDetailRecResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    PoiDetailRecResponse typedOther = (PoiDetailRecResponse)other;

    lastComparison = Boolean.valueOf(isSetPoiRecList()).compareTo(typedOther.isSetPoiRecList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPoiRecList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.poiRecList, typedOther.poiRecList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSessionId()).compareTo(typedOther.isSetSessionId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSessionId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sessionId, typedOther.sessionId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStrategy()).compareTo(typedOther.isSetStrategy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStrategy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.strategy, typedOther.strategy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraMap()).compareTo(typedOther.isSetExtraMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraMap, typedOther.extraMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PoiDetailRecResponse(");
    boolean first = true;

    sb.append("poiRecList:");
    if (this.poiRecList == null) {
      sb.append("null");
    } else {
      sb.append(this.poiRecList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (isSetSessionId()) {
      if (!first) sb.append(", ");
      sb.append("sessionId:");
      sb.append(this.sessionId);
      first = false;
    }
    if (isSetStrategy()) {
      if (!first) sb.append(", ");
      sb.append("strategy:");
      if (this.strategy == null) {
        sb.append("null");
      } else {
        sb.append(this.strategy);
      }
      first = false;
    }
    if (isSetExtraMap()) {
      if (!first) sb.append(", ");
      sb.append("extraMap:");
      if (this.extraMap == null) {
        sb.append("null");
      } else {
        sb.append(this.extraMap);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (poiRecList == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'poiRecList' was not present! Struct: " + toString());
    }
    if (status == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' was not present! Struct: " + toString());
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PoiDetailRecResponseStandardSchemeFactory implements SchemeFactory {
    public PoiDetailRecResponseStandardScheme getScheme() {
      return new PoiDetailRecResponseStandardScheme();
    }
  }

  private static class PoiDetailRecResponseStandardScheme extends StandardScheme<PoiDetailRecResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PoiDetailRecResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // POI_REC_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                struct.poiRecList = new ArrayList<PoiDetailResp>(_list56.size);
                for (int _i57 = 0; _i57 < _list56.size; ++_i57)
                {
                  PoiDetailResp _elem58; // required
                  _elem58 = new PoiDetailResp();
                  _elem58.read(iprot);
                  struct.poiRecList.add(_elem58);
                }
                iprot.readListEnd();
              }
              struct.setPoiRecListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = RecResponseStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SESSION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sessionId = iprot.readI64();
              struct.setSessionIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STRATEGY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.strategy = iprot.readString();
              struct.setStrategyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXTRA_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map59 = iprot.readMapBegin();
                struct.extraMap = new HashMap<String,String>(2*_map59.size);
                for (int _i60 = 0; _i60 < _map59.size; ++_i60)
                {
                  String _key61; // required
                  String _val62; // required
                  _key61 = iprot.readString();
                  _val62 = iprot.readString();
                  struct.extraMap.put(_key61, _val62);
                }
                iprot.readMapEnd();
              }
              struct.setExtraMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PoiDetailRecResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.poiRecList != null) {
        oprot.writeFieldBegin(POI_REC_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.poiRecList.size()));
          for (PoiDetailResp _iter63 : struct.poiRecList)
          {
            _iter63.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.isSetSessionId()) {
        oprot.writeFieldBegin(SESSION_ID_FIELD_DESC);
        oprot.writeI64(struct.sessionId);
        oprot.writeFieldEnd();
      }
      if (struct.strategy != null) {
        if (struct.isSetStrategy()) {
          oprot.writeFieldBegin(STRATEGY_FIELD_DESC);
          oprot.writeString(struct.strategy);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraMap != null) {
        if (struct.isSetExtraMap()) {
          oprot.writeFieldBegin(EXTRA_MAP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.extraMap.size()));
            for (Map.Entry<String, String> _iter64 : struct.extraMap.entrySet())
            {
              oprot.writeString(_iter64.getKey());
              oprot.writeString(_iter64.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PoiDetailRecResponseTupleSchemeFactory implements SchemeFactory {
    public PoiDetailRecResponseTupleScheme getScheme() {
      return new PoiDetailRecResponseTupleScheme();
    }
  }

  private static class PoiDetailRecResponseTupleScheme extends TupleScheme<PoiDetailRecResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PoiDetailRecResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.poiRecList.size());
        for (PoiDetailResp _iter65 : struct.poiRecList)
        {
          _iter65.write(oprot);
        }
      }
      oprot.writeI32(struct.status.getValue());
      BitSet optionals = new BitSet();
      if (struct.isSetSessionId()) {
        optionals.set(0);
      }
      if (struct.isSetStrategy()) {
        optionals.set(1);
      }
      if (struct.isSetExtraMap()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetSessionId()) {
        oprot.writeI64(struct.sessionId);
      }
      if (struct.isSetStrategy()) {
        oprot.writeString(struct.strategy);
      }
      if (struct.isSetExtraMap()) {
        {
          oprot.writeI32(struct.extraMap.size());
          for (Map.Entry<String, String> _iter66 : struct.extraMap.entrySet())
          {
            oprot.writeString(_iter66.getKey());
            oprot.writeString(_iter66.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PoiDetailRecResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list67 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.poiRecList = new ArrayList<PoiDetailResp>(_list67.size);
        for (int _i68 = 0; _i68 < _list67.size; ++_i68)
        {
          PoiDetailResp _elem69; // required
          _elem69 = new PoiDetailResp();
          _elem69.read(iprot);
          struct.poiRecList.add(_elem69);
        }
      }
      struct.setPoiRecListIsSet(true);
      struct.status = RecResponseStatus.findByValue(iprot.readI32());
      struct.setStatusIsSet(true);
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.sessionId = iprot.readI64();
        struct.setSessionIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.strategy = iprot.readString();
        struct.setStrategyIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map70 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.extraMap = new HashMap<String,String>(2*_map70.size);
          for (int _i71 = 0; _i71 < _map70.size; ++_i71)
          {
            String _key72; // required
            String _val73; // required
            _key72 = iprot.readString();
            _val73 = iprot.readString();
            struct.extraMap.put(_key72, _val73);
          }
        }
        struct.setExtraMapIsSet(true);
      }
    }
  }

}

